name: Deploy Elm to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# Cancel current deployment when a new push occurs
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check build type
        id: check_build_type
        uses: andstor/file-existence-action@v2
        with:
          files: "index.html"

      - name: Instal elm command
        uses: jorelali/setup-elm@v5
        with:
          elm-version: 0.19.1

      ### Either Build JS
      ### use the --optimize flag with the elm make command if your code does not use Debug
      - name: Build JS Elm artifact
        if: steps.check_build_type.outputs.files_exists == 'true'
        run: |
          elm make src/Main.elm --output=main.js \
          && npm install uglify-js -g \
          && uglifyjs main.js --compress "pure_funcs=[F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9],pure_getters,keep_fargs=false,unsafe_comps,unsafe" | uglifyjs --mangle --output main.js

      ### Or Build HTML
      - name: Build HTML Elm artifact
        if: steps.check_build_type.outputs.files_exists == 'false'
        run: elm make src/Main.elm

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
